name: Build, Scan and Push Docker Image to ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to AWS ECR
      run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}

    - name: Build Docker image
      id: build
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: ${{ secrets.AWS_ECR_REGISTRY }}/mydemo:latest

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install -y trivy

    - name: Scan Docker image with Trivy
      run: trivy image --format template --template "@contrib/html.tpl" --output trivy-report.html ${{ secrets.AWS_ECR_REGISTRY }}

    - name: Upload Trivy report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: trivy-report
        path: trivy-report.html

    - name: Push Docker image to AWS ECR
      if: success()
      run: docker push ${{ secrets.AWS_ECR_REGISTRY }}/mydemo:latest
